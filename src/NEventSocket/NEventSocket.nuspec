<?xml version='1.0'?>
<package>
  <metadata>
    <id>NEventSocket</id>
    <version>$version$</version>
    <title>NEventSocket</title>
    <authors>Dan Barua</authors>
    <owners>Dan Barua</owners>
    <licenseUrl>https://github.com/danbarua/NEventSocket/blob/master/LICENSE</licenseUrl>
    <projectUrl>https://github.com/danbarua/NEventSocket</projectUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>An async reactive EventSocket driver for FreeSwitch</description>
    <dependencies />
    <copyright>Copyright (C) Dan Barua 2014-2016</copyright>
    <tags>FreeSwitch EventSocket ESL Reactive</tags>
    <releaseNotes>
      
      2.1.0 - BREAKING CHANGES: ( see https://github.com/danbarua/NEventSocket/blob/master/BREAKING%20CHANGES.md )
                - ChannelEvents are now a separate observable and type
                - Moved Originate operations from InboundSocket to extension methods on EventSocket (breaks binary compatibility)
            - Channels
                - exposes socket and last event properties on Channel instead of Channel.Advanced
                - uses CHANNEL_HANGUP_COMPLETE instead of CHANNEL_HANGUP
                - add channel.EnableHeartBeat() for keepalive
                - move recording functionality to BasicChannel
            - Changed type of BridgeOptions.FilterDtmf from boolean to Leg enum - allow one or both legs to filter DTMF  
            - OutboundListener can be stopped and restarted
            - Reliability bugfixes
      1.1.0 - Critical Bugfix:
                - Make socket initialization thread-safe
              Other Bugfixes: 
                - Use async-locking around command and API sends
                  to correlate responses
                - Don't log spurious API error responses
                - Don't log uuid_dump responses
                - Fix Playback application edge cases
                - Log warnings in OutboundSocket mode when not using async full
      1.0.2 - Bugfix: Handle multi-arg applications on Originate
                      Surface Api Response and Command Reply errors in logs
      1.0.1 - Bugfix - ensure subscribed to BackgroundJob events when initiating BgAPI
      1.0.0 - BREAKING CHANGE: Affects behaviour of socket.SubscribeEvents() - see https://github.com/danbarua/NEventSocket/blob/master/BREAKING%20CHANGES.md
      0.6.10 - Bugfix: handle garbage collected event handler in Dispose();
      0.6.9 - Bugfix: make all Dispose() calls thread safe
      0.6.8 - Bugfix: properly handle multiple Dispose() calls
      0.6.7 - Bugfix: logger garbage collected in Dispose() call
      0.6.6 - Bugfix: remove superfluous logging
      0.6.5 - Bugfix: ensure Message/Event pumps are not blocked
      0.6.4 - Channels: expose Channel.Advanded.LastEvent property
      0.6.3 - Bugfix - Replace .OnErrorResumeNext() with .Retry() on Channel connection error
      0.6.2 - Bugfix - don't terminate OutboundListener.Channels observable on connection errors.
      0.6.1 - Added events and helpers for conferences
      0.6.0 - Channels: move channel variables, event headers, underlying socket to Channel.Advanced.
      0.5.3 - Channels: fix channel init bug
      0.5.2 - Channels: Filter events so underlying socket does not receive events for all channels
      0.5.1 - Fix issues with initializing Rx when run in scriptcs
      0.5.0 - Fix uri decoding issue on message parsing
            - Allow operations on Channels in Pre-Answer state
      
    </releaseNotes>
  </metadata>
    <files>
        <file src="..\..\build\merged\NEventSocket.dll" target="lib\net45" />
        <file src="..\..\build\merged\NEventSocket.pdb" target="lib\net45" />
        <file src="bin\Release\NEventSocket.xml" target="lib\net45" />
    </files>
</package>